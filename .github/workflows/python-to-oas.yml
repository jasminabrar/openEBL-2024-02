name: Run Python Files

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  run-python:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

        # can also specify python version if needed
      - name: setup python
        uses: actions/setup-python@v4

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install klayout SiEPIC siepic_ebeam_pdk
          python -m pip install --upgrade SiEPIC

      - name: Print Working Directory
        run: |
          pwd
          ls -R

      - name: Debug information
        run: |
          ls -R submissions
          ls -R "submissions/KLayout Python"

      - name: get python scripts
        run: |

          export FILES=$(find "submissions/KLayout Python" -type f -name "*.py")

          echo "Added / modified Python files; $FILES"

          IFS=$'\n'
        
          OAS_FILES=""
          # run all python files to get gds/oas output
          for file in $FILES; do

            file_name=$(basename "$file")
            oas_file="${file_name%.py}.oas"
            OAS_FILES+="$oas_file "
            
            echo "oas file; $oas_file"

            echo "Getting gds/oas output for $file"

            python "$file" 

            echo "Done for $file"

          done

          echo "oas files; $OAS_FILES"

          echo "OAS_FILES=$OAS_FILES" >> $GITHUB_ENV

      - name: write added gds/oas files to txt file
        run: |
          echo "$OAS_FILES" > python-to-gds_oas.txt

      - name: commit outputted gds/oas files into repository
        run: |
          git config --local user.email jasminabrar@users.noreply.github.com
          git config --local user.name "jasminabrar"

          git add python-to-gds_oas.txt
          
          # git add all produced oas files
          for file in $OAS_FILES; do
            git add "submissions/$file"
          done

          git commit -m "Add oas files produced from .py files" 
          git push

      # - name: run verification
      #   run: |
      #     # print the names of the files
      #     echo "Files for verification: $OAS_FILES"

      #     files_with_errors=""

      #     IFS=' '
        
      #     # run verification on all files
      #     for file in $OAS_FILES; do

      #       echo "Running verification on $file"

      #       output=$(python run_verification.py "submissions/$file")

      #       # get number of errors
      #       errors_from_output=$(echo "$output" | tail -n 1)

      #       echo "$errors_from_output errors detected for $file"

      #       # if file results in verification errors add to string files_with_errors
      #       if [[ "$errors_from_output" -ge 1 ]]; then
      #         files_with_errors+="$file, $errors_from_output errors. "
      #       fi

      #       echo "Done verification on $file"
      #     done

      #     echo "files_with_errors=$files_with_errors" >> $GITHUB_ENV
        
      # - name: move output files to new folder
      #   run: |
      #     export OUTPUT_FILES=$(find /home/runner/work/openEBL-2024-02/openEBL-2024-02/submissions -name "*.lyrdb")
      #     echo "Output files: $OUTPUT_FILES"

      #     mkdir -p verification_output

      #     for file in $OUTPUT_FILES; do
      #       cp "$file" verification_output/
      #     done

      # - name: upload artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: layout-errors
      #     path: verification_output/

      # - name: fail if there are errors from layout verification
      #   run: |
      #     if [ -z "$files_with_errors" ]; then
      #       echo "No errors detected."
      #     else
      #       echo "Errors detected: $files_with_errors"
      #       exit 1
      #     fi


